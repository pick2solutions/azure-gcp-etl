name: Deploy Artifact Registry and Images

on:
  push:
    branches:
      - main

jobs:
  gcr-terraform:
    name: GCR Terraform
    runs-on: ubuntu-latest
    environment: main
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: cloud_run_containers

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
            project_id: ${{ vars.GCP_PROJECT_ID }}
            workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}


      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_repository_id: ${{ vars.GCP_REPOSITORY_ID }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        env:
            TF_VAR_gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
            TF_VAR_repository_id: ${{ vars.GCP_REPOSITORY_ID }}

  docker-push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: gcr-terraform
    environment: main
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: containers_iac
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
            project_id: ${{ vars.GCP_PROJECT_ID }}
            workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          
      - name: Build and Push Azure Import Container
        run: |-
          docker build -t "us-central1-docker.pkg.dev/pick2-etl-demo/pick2-bq-demo/azure-to-gcs" -f Export_GCS.Dockerfile ./
          docker push "us-central1-docker.pkg.dev/pick2-etl-demo/pick2-bq-demo/azure-to-gcs"

      - name: Build and Push BQ Import Container
        run: |-
          docker build -t "us-central1-docker.pkg.dev/pick2-etl-demo/pick2-bq-demo/gcs-to-bq" -f Import_BQ.Dockerfile ./
          docker push "us-central1-docker.pkg.dev/pick2-etl-demo/pick2-bq-demo/gcs-to-bq"